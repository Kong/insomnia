name: Test

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  OS:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      
      - name: Read Node version from .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}
      
      - name: Bootstrap packages
        run: npm run bootstrap
      
      - name: Lint
        run: npm run lint
      
      - name: Lint Markdown
        run: npm run lint:markdown
      
      - name: Run tests
        run: npm test

      - name: Package Inso CLI
        run: npm run inso-package

      - name: Set Inso Variables
        id: inso-variables
        shell: bash
        run: |
          PKG_NAME="${{ matrix.os }}-inso-${{ github.run_number }}"
          BUNDLE_ID="com.insomnia.inso.app"

          echo ::set-output name=pkg-name::$PKG_NAME
          echo ::set-output name=bundle-id::$BUNDLE_ID

      - name: Create macOS installer package
        if: matrix.os == 'macos-latest'
        run: |
          chmod +x ./src/scripts/macos-pkg.sh
          ./src/scripts/macos-pkg.sh
        shell: bash
        working-directory: packages/insomnia-inso
        continue-on-error: true
        env:
          MACOS_CERTIFICATE: ${{ secrets.DESIGNER_MAC_CSC_LINK }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.DESIGNER_MAC_CSC_KEY_PASSWORD }}
          PKG_NAME: ${{ steps.inso-variables.outputs.pkg-name }}
          BUNDLE_ID: ${{ steps.inso-variables.outputs.bundle-id }}
          ARTIFACT_LOCATION: compressed
          # Hardcoded here, configured in https://github.com/Kong/insomnia/pull/4086
          VERSION: "2.3.2"

      # We don't need to notarize and staple on every commit
      # - name: Notarize installer package
      #   if: matrix.os == 'macos-latest'
      #   uses: devbotsxyz/xcode-notarize@v1
      #   with:
      #     product-path: packages/insomnia-inso/compressed/${{ steps.inso-variables.outputs.pkg-name }}.pkg
      #     primary-bundle-id: ${{ steps.inso-variables.outputs.bundle-id }}
      #     appstore-connect-username: ${{ secrets.DESIGNER_APPLE_ID }}
      #     appstore-connect-password: ${{ secrets.DESIGNER_APPLE_ID_PASSWORD }}

      # - name: Staple installer package
      #   if: matrix.os == 'macos-latest'
      #   uses: devbotsxyz/xcode-staple@v1
      #   with:
      #     product-path: packages/insomnia-inso/compressed/${{ steps.inso-variables.outputs.pkg-name }}.pkg

      - name: Create Inso CLI artifacts
        run: npm run inso-package:compress

      - name: Upload Inso CLI artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: ignore
          name: ${{ steps.inso-variables.outputs.pkg-name }}
          path: packages/insomnia-inso/compressed
      
      - name: Run CLI smoke tests
        run: npm run test:smoke:cli

      - name: Build for smoke tests
        run: npm run app-build:smoke

      - name: Run smoke tests
        timeout-minutes: 10 # sometimes jest fails to exit - https://github.com/facebook/jest/issues/6423#issuecomment-620407580
        run: npm run test:smoke:build
      
      - name: Upload smoke test screenshots
        uses: actions/upload-artifact@v2
        if: always()
        with:
          if-no-files-found: ignore
          name: ${{ matrix.os }}-smoke-test-screenshots-${{ github.run_number }}
          path: packages/insomnia-smoke-test/screenshots
