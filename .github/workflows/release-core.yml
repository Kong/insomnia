name: Release Core

on:
  push:
    tags:
      - core@*

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REF: ${{ github.ref }}
  GITHUB_SHA: ${{ github.sha }}
  NPM_CONFIG_TARGET: 9.1.0
  NPM_CONFIG_DISTURL: https://electronjs.org/headers
  NPM_CONFIG_RUNTIME: electron

jobs:
  Windows:
    name: Windows
    runs-on: windows-2016
    steps:
      - uses: actions/checkout@v1
      - name: Read Node version from .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}
      - run: npm run bootstrap
      - run: npm run test:pre-release
      - run: npm run app-release
        env:
          CSC_LINK: ${{ secrets.CORE_WINDOWS_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CORE_WINDOWS_CSC_KEY_PASSWORD }}
  Mac:
    name: Mac
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Read Node version from .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}
      - run: npm run bootstrap
      - run: npm run test:pre-release
      - run: npm run app-release
        env:
          APPLE_ID: ${{ secrets.DESIGNER_APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.DESIGNER_APPLE_ID_PASSWORD }}
          CSC_LINK: ${{ secrets.DESIGNER_MAC_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.DESIGNER_MAC_CSC_KEY_PASSWORD }}
  Linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - run: |
          sudo snap install snapcraft --classic
          echo "${{ secrets.SNAPCRAFT_LOGIN_FILE }}" > snapcraft.txt && snapcraft login --with snapcraft.txt
      - uses: actions/checkout@v1
      - name: Read Node version from .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}
      - run: npm run bootstrap
      - run: npm run test:pre-release
      - run: npm run app-release
        env:
          BUILD_TARGETS: AppImage,deb,tar.gz,rpm,snap
