name: CI

on: [push]

jobs:
  Windows:
    name: Windows
    runs-on: windows-2016
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: Install node tools
        run: npm install --global --production windows-build-tools
      - name: Install node-gyp
        run: npm install --global node-gyp@latest
      - name: Set node config to use python2.7
        run: npm config set python python2.7
      - name: Set node config to set msvs_version to 2015
        run: npm config set msvs_version 2015
      - name: Bootstrap packages
        run: npm run bootstrap
      - name: Run tests
        run: npm test
      - name: Release app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.event.ref }}
          CSC_LINK: ${{ secrets.WINDOWS_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.WINDOWS_CSC_KEY_PASSWORD }}
        run: npm run app-release
  # Disable for now in favor of TravisCI (this Mac version not old enough)
  #  Mac:
  #    name: Mac
  #    runs-on: macOS-10.14
  #    steps:
  #      - name: Checkout branch
  #        uses: actions/checkout@v1
  #      - name: Install NodeJS
  #        uses: actions/setup-node@v1
  #        with:
  #          node-version: 10
  #      - name: Bootstrap packages
  #        run: npm run bootstrap
  #      - name: Run tests
  #        run: npm test
  #      - name: Release app
  #        run: npm run app-release
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #          GITHUB_REF: ${{ github.event.ref }}
  #          CSC_LINK: ${{ secrets.MAC_CSC_LINK }}
  #          CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_KEY_PASSWORD }}
  #          APPLE_ID: ${{ secrets.APPLE_ID }}
  #          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
  Ubuntu14:
    name: Linux (Generic)
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Run Docker
        uses: ./.github/actions/build-linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.event.ref }}
          BUILD_TARGETS: AppImage,deb,tar.gz,rpm
          NODELIBCURL_BUILD_STATIC: yes
  Ubuntu16:
    name: Linux (Snap)
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Run Docker
        uses: ./.github/actions/build-snap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.event.ref }}
          SNAPCRAFT_LOGIN_FILE: ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
          BUILD_TARGETS: snap
          NODELIBCURL_BUILD_STATIC: yes
