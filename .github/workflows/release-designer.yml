name: Release Designer

on:
  push:
    tags:
      - designer@*

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  GITHUB_REF: ${{ github.ref }}
  GITHUB_SHA: ${{ github.sha }}
  NPM_CONFIG_TARGET: 3.1.13
  NPM_CONFIG_DISTURL: https://electronjs.org/headers
  NPM_CONFIG_RUNTIME: electron

jobs:
  Windows:
    name: Windows
    runs-on: windows-2016
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - run: npm run bootstrap
      - run: npm test
      - run: npm run app-release
        env:
          CSC_LINK: ${{ secrets.DESIGNER_WINDOWS_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.DESIGNER_WINDOWS_CSC_KEY_PASSWORD }}
  Mac:
    name: Mac
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - run: npm run bootstrap
      - run: npm test
      - run: npm run app-release
        env:
          APPLE_ID: ${{ secrets.DESIGNER_APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.DESIGNER_APPLE_ID_PASSWORD }}
          CSC_LINK: ${{ secrets.DESIGNER_MAC_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.DESIGNER_MAC_CSC_KEY_PASSWORD }}
  Linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - run: npm run bootstrap
      - run: npm test
      - run: npm run app-release
        env:
          BUILD_TARGETS: AppImage,deb,tar.gz,rpm
          # TODO: Figure out Snap deploys
          # BUILD_TARGETS: AppImage,Snap,deb,tar.gz,rpm
          # SNAPCRAFT_LOGIN_FILE: ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
