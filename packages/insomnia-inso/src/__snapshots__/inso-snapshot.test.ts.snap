// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Help snapshots "inso --help" 1`] = `
"Usage: inso [options] [command]

A CLI for Insomnia!
  With this tool you can test, lint, and export your Insomnia data.
  Inso will try to detect your locally installed Insomnia data.
  You can also point it at a git repository folder, or an Insomnia export file.

  Examples:
  $ inso run test
  $ inso lint spec
  $ inso export spec


  Inso also supports configuration files, by default it will look for .insorc in the current/provided working directory.
  $ inso export spec --config /some/path/.insorc


Options:
  -v, --version           output the version number
  -w, --workingDir <dir>  set working directory, to look for files: .insorc,
                          .insomnia folder, *.db.json (default: "")
  --exportFile <file>     set the Insomna export file read from (default: "")
  --verbose               show additional logs while running the command
                          (default: false)
  --ci                    run in CI, disables all prompts, defaults to false
                          (default: false)
  --config <path>         path to configuration file containing above options
                          (default: "")
  --printOptions          print the loaded options (default: false)
  -h, --help              display help for command

Commands:
  run                     Execution utilities
  lint                    Lint a yaml file in the workingDir or the provided
                          file path (with  .spectral.yml) or a spec in an
                          Insomnia database directory
  export                  Export data from insomnia models
  script <script-name>    Run scripts defined in .insorc
  help [command]          display help for command"
`;

exports[`Help snapshots "inso -h" 1`] = `
"Usage: inso [options] [command]

A CLI for Insomnia!
  With this tool you can test, lint, and export your Insomnia data.
  Inso will try to detect your locally installed Insomnia data.
  You can also point it at a git repository folder, or an Insomnia export file.

  Examples:
  $ inso run test
  $ inso lint spec
  $ inso export spec


  Inso also supports configuration files, by default it will look for .insorc in the current/provided working directory.
  $ inso export spec --config /some/path/.insorc


Options:
  -v, --version           output the version number
  -w, --workingDir <dir>  set working directory, to look for files: .insorc,
                          .insomnia folder, *.db.json (default: "")
  --exportFile <file>     set the Insomna export file read from (default: "")
  --verbose               show additional logs while running the command
                          (default: false)
  --ci                    run in CI, disables all prompts, defaults to false
                          (default: false)
  --config <path>         path to configuration file containing above options
                          (default: "")
  --printOptions          print the loaded options (default: false)
  -h, --help              display help for command

Commands:
  run                     Execution utilities
  lint                    Lint a yaml file in the workingDir or the provided
                          file path (with  .spectral.yml) or a spec in an
                          Insomnia database directory
  export                  Export data from insomnia models
  script <script-name>    Run scripts defined in .insorc
  help [command]          display help for command"
`;

exports[`Help snapshots "inso export -h" 1`] = `
"Usage: inso export [options] [command]

Export data from insomnia models

Options:
  -h, --help                   display help for command

Commands:
  spec [options] [identifier]  Export an API Specification to a file,
                               identifier can be an API Spec id
  help [command]               display help for command"
`;

exports[`Help snapshots "inso export spec -h" 1`] = `
"Usage: inso export spec [options] [identifier]

Export an API Specification to a file, identifier can be an API Spec id

Options:
  -o, --output <path>    save the generated config to a file (default: "")
  -s, --skipAnnotations  remove all "x-kong-" annotations, defaults to false
                         (default: false)
  -h, --help             display help for command"
`;

exports[`Help snapshots "inso generate -h" 1`] = `
"Usage: inso [options] [command]

A CLI for Insomnia!
  With this tool you can test, lint, and export your Insomnia data.
  Inso will try to detect your locally installed Insomnia data.
  You can also point it at a git repository folder, or an Insomnia export file.

  Examples:
  $ inso run test
  $ inso lint spec
  $ inso export spec


  Inso also supports configuration files, by default it will look for .insorc in the current/provided working directory.
  $ inso export spec --config /some/path/.insorc


Options:
  -v, --version           output the version number
  -w, --workingDir <dir>  set working directory, to look for files: .insorc,
                          .insomnia folder, *.db.json (default: "")
  --exportFile <file>     set the Insomna export file read from (default: "")
  --verbose               show additional logs while running the command
                          (default: false)
  --ci                    run in CI, disables all prompts, defaults to false
                          (default: false)
  --config <path>         path to configuration file containing above options
                          (default: "")
  --printOptions          print the loaded options (default: false)
  -h, --help              display help for command

Commands:
  run                     Execution utilities
  lint                    Lint a yaml file in the workingDir or the provided
                          file path (with  .spectral.yml) or a spec in an
                          Insomnia database directory
  export                  Export data from insomnia models
  script <script-name>    Run scripts defined in .insorc
  help [command]          display help for command"
`;

exports[`Help snapshots "inso help" 1`] = `
"Usage: inso [options] [command]

A CLI for Insomnia!
  With this tool you can test, lint, and export your Insomnia data.
  Inso will try to detect your locally installed Insomnia data.
  You can also point it at a git repository folder, or an Insomnia export file.

  Examples:
  $ inso run test
  $ inso lint spec
  $ inso export spec


  Inso also supports configuration files, by default it will look for .insorc in the current/provided working directory.
  $ inso export spec --config /some/path/.insorc


Options:
  -v, --version           output the version number
  -w, --workingDir <dir>  set working directory, to look for files: .insorc,
                          .insomnia folder, *.db.json (default: "")
  --exportFile <file>     set the Insomna export file read from (default: "")
  --verbose               show additional logs while running the command
                          (default: false)
  --ci                    run in CI, disables all prompts, defaults to false
                          (default: false)
  --config <path>         path to configuration file containing above options
                          (default: "")
  --printOptions          print the loaded options (default: false)
  -h, --help              display help for command

Commands:
  run                     Execution utilities
  lint                    Lint a yaml file in the workingDir or the provided
                          file path (with  .spectral.yml) or a spec in an
                          Insomnia database directory
  export                  Export data from insomnia models
  script <script-name>    Run scripts defined in .insorc
  help [command]          display help for command"
`;

exports[`Help snapshots "inso lint -h" 1`] = `
"Usage: inso lint [options] [command]

Lint a yaml file in the workingDir or the provided file path (with
.spectral.yml) or a spec in an Insomnia database directory

Options:
  -h, --help         display help for command

Commands:
  spec [identifier]  Lint an API Specification, identifier can be an API Spec
                     id or a file path
  help [command]     display help for command"
`;

exports[`Help snapshots "inso lint spec -h" 1`] = `
"Usage: inso lint spec [options] [identifier]

Lint an API Specification, identifier can be an API Spec id or a file path

Options:
  -h, --help  display help for command"
`;

exports[`Help snapshots "inso run -h" 1`] = `
"Usage: inso run [options] [command]

Execution utilities

Options:
  -h, --help                         display help for command

Commands:
  test [options] [identifier]        Run Insomnia unit test suites, identifier
                                     can be a test suite id or a API Spec id
  collection [options] [identifier]  Run Insomnia request collection,
                                     identifier can be a workspace id
  help [command]                     display help for command"
`;

exports[`Help snapshots "inso run test -h" 1`] = `
"Usage: inso run test [options] [identifier]

Run Insomnia unit test suites, identifier can be a test suite id or a API Spec
id

Options:
  -e, --env <identifier>         environment to use (default: "")
  -t, --testNamePattern <regex>  run tests that match the regex (default: "")
  -r, --reporter <reporter>      reporter to use, options are [dot, list, min,
                                 progress, spec] (default: spec) (default:
                                 "spec")
  -b, --bail                     abort ("bail") after first test failure
                                 (default: false)
  --keepFile                     do not delete the generated test file
                                 (default: false)
  --disableCertValidation        disable certificate validation for requests
                                 with SSL (default: false)
  -h, --help                     display help for command"
`;

exports[`Run Collection Snapshots "inso run collection -w ../../packages/insomnia-smoke-test/fixtures/simple.yaml --verbose -e env_2eecf85b7f wrk_0702a5 --requestNamePattern http" 1`] = `
"[90m›[39m Data store configured from Insomnia export at [36m/Users/jack.kavanagh@konghq.com/git/insomnia/packages/insomnia-smoke-test/fixtures/simple.yaml[39m
[90m›[39m Load workspace with identifier [36mwrk_0702a5[39m from data store
[90m›[39m Found 1.
[90m›[39m Load base environment for the workspace [36mwrk_0702a57d75d44255a8cecd2c5fa87809[39m from data store
[90m›[39m Found 1.
[90m›[39m Load sub environment with identifier [36menv_2eecf85b7f[39m from data store
[90m›[39m Found 1
Running request: example http req_579daeabc7534a52b242bdaaaf6ca4dc
[90m›[39m {
  status: 200,
  statusMessage: 'OK',
  data: '{"id":"1"}',
  headers: {
    'x-powered-by': 'Express',
    'content-type': 'application/json; charset=utf-8',
    'content-length': '10',
    etag: 'W/"a-g8XH0Dum5CMsI43ax61J3a/Qg5Q"',
    date: 'Wed, 24 Jul 2024 10:29:16 GMT',
    connection: 'keep-alive',
    'keep-alive': 'timeout=5'
  },
  responseTime: 3.65,
  timelinePath: '/tmp/insomnia-send-request/responses/res_bb7e8ec7dc6f40e2b32367a8fb4e380d.timeline'
}
[90m›[39m Preparing request to http://localhost:4010/pets/1 Current time is 2024-07-24T10:29:16.886Z Enable automatic URL encoding Using default HTTP version Enable timeout of 30000ms Enable SSL validation   Trying 127.0.0.1:4010...
 Connected to localhost (127.0.0.1) port 4010 (#0)
 GET /pets/1 HTTP/1.1
Host: localhost:4010
Accept: */*

 Mark bundle as not supporting multiuse
 HTTP/1.1 200 OK
 X-Powered-By: Express
 Content-Type: application/json; charset=utf-8
 Content-Length: 10
 ETag: W/"a-g8XH0Dum5CMsI43ax61J3a/Qg5Q"
 Date: Wed, 24 Jul 2024 10:29:16 GMT
 Connection: keep-alive
 Keep-Alive: timeout=5
 
 Received 10 B chunk Connection #0 to host localhost left intact
"
`;
