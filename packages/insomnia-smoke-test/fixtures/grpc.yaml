_type: export
__export_format: 4
__export_date: 2022-12-02T13:10:54.407Z
__export_source: insomnia.desktop.app:v2022.7.0-beta.6
resources:
  - _id: greq_70ceba59d634442891ee523389458a9c
    parentId: fld_9f284a1171b84055959343e151fc6ce2
    modified: 1669986544274
    created: 1638200268776
    url: localhost:50051
    name: UnaryWithOutProtoFile
    description: ""
    protoFileId: ""
    protoMethodName: ""
    metadata: []
    body:
      text: |-
        {
        	"latitude":"409146138",
        	"longitude":"-746188906"
        }
    metaSortKey: -1638200268776
    isPrivate: false
    _type: grpc_request
  - _id: greq_70ceba59d634442891ee523389458a8c
    parentId: fld_9f284a1171b84055959343e151fc6ce2
    modified: 1669986544274
    created: 1638200268776
    url: localhost:50051
    name: Unary
    description: ""
    protoFileId: pf_f11a2ad5afc3441ba963d94f353af020
    protoMethodName: /routeguide.RouteGuide/GetFeature
    metadata: []
    body:
      text: |-
        {
        	"latitude":"409146138",
        	"longitude":"-746188906"
        }
    metaSortKey: -1638200268776
    isPrivate: false
    _type: grpc_request
  - _id: fld_9f284a1171b84055959343e151fc6ce2
    parentId: wrk_0c38593a37ec40f782ef9151dd0e307c
    modified: 1638201347079
    created: 1638201347079
    name: Route Guide Example
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1638201347079
    _type: request_group
  - _id: wrk_0c38593a37ec40f782ef9151dd0e307c
    parentId: null
    modified: 1669986621789
    created: 1635959595045
    name: PreRelease gRPC
    description: ""
    scope: collection
    _type: workspace
  - _id: greq_8e1742bfb73249dd95b732eadeb2481c
    parentId: fld_9f284a1171b84055959343e151fc6ce2
    modified: 1669986550033
    created: 1638200430327
    url: localhost:50051
    name: Server Stream
    description: ""
    protoFileId: pf_f11a2ad5afc3441ba963d94f353af020
    protoMethodName: /routeguide.RouteGuide/ListFeatures
    metadata: []
    body:
      text: |-
        {
        	"lo":{
        		"latitude":"400000000",
        		"longitude":"-750000000"
        	},
        	"hi":{
        		"latitude":"420000000",
        		"longitude":"-730000000"
        	}
        }
    metaSortKey: -1638200268751
    isPrivate: false
    _type: grpc_request
  - _id: greq_3210b5e5ab6a48f28651e8eaf2c5517e
    parentId: fld_9f284a1171b84055959343e151fc6ce2
    modified: 1669986557908
    created: 1638200871429
    url: localhost:50051
    name: Client Stream
    description: ""
    protoFileId: pf_f11a2ad5afc3441ba963d94f353af020
    protoMethodName: /routeguide.RouteGuide/RecordRoute
    metadata: []
    body:
      text: |-
        {
        	"latitude":"415301720",
        	"longitude":"-748416257"
        }
    metaSortKey: -1638200268726
    isPrivate: false
    _type: grpc_request
  - _id: greq_001ace066a6540ea92576fe5b5c9ee34
    parentId: fld_9f284a1171b84055959343e151fc6ce2
    modified: 1669986566981
    created: 1638201149312
    url: localhost:50051
    name: Bidirectional Stream
    description: ""
    protoFileId: pf_f11a2ad5afc3441ba963d94f353af020
    protoMethodName: /routeguide.RouteGuide/RouteChat
    metadata: []
    body:
      text: |-
        {
        	"message": "test 5",
        	"location": {
        		"latitude":"415301720",
        		"longitude":"-748416257"
        	}
        }
    metaSortKey: -1638200268676
    isPrivate: false
    _type: grpc_request
  - _id: env_3a3e92e96a01e1670b5af61d62db80a0b2f38629
    parentId: wrk_0c38593a37ec40f782ef9151dd0e307c
    modified: 1635959595049
    created: 1635959595049
    name: Base Environment
    data: {}
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1635959595049
    _type: environment
  - _id: jar_d798b39b17a1508adca5790277ae210bbfae15c9
    parentId: wrk_0c38593a37ec40f782ef9151dd0e307c
    modified: 1635959595050
    created: 1635959595050
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_4072261ec7d3406e882a787c7c9ca760
    parentId: wrk_0c38593a37ec40f782ef9151dd0e307c
    modified: 1635959595046
    created: 1635959595046
    fileName: gRPC experiments
    contents: ""
    contentType: yaml
    _type: api_spec
  - _id: pf_f11a2ad5afc3441ba963d94f353af020
    parentId: wrk_0c38593a37ec40f782ef9151dd0e307c
    modified: 1638200264686
    created: 1638200264686
    name: route_guide.proto
    protoText: >
      // This code was taken from https://github.com/grpc/grpc

      // Copyright 2015 gRPC authors.

      //

      // Licensed under the Apache License, Version 2.0 (the "License");

      // you may not use this file except in compliance with the License.

      // You may obtain a copy of the License at

      //

      //     http://www.apache.org/licenses/LICENSE-2.0

      //

      // Unless required by applicable law or agreed to in writing, software

      // distributed under the License is distributed on an "AS IS" BASIS,

      // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      // See the License for the specific language governing permissions and

      // limitations under the License.


      syntax = "proto3";


      option java_multiple_files = true;

      option java_package = "io.grpc.examples.routeguide";

      option java_outer_classname = "RouteGuideProto";

      option objc_class_prefix = "RTG";


      package routeguide;


      // Interface exported by the server.

      service RouteGuide {
        // A simple RPC.
        //
        // Obtains the feature at a given position.
        //
        // A feature with an empty name is returned if there's no feature at the given
        // position.
        rpc GetFeature(Point) returns (Feature) {}

        // A server-to-client streaming RPC.
        //
        // Obtains the Features available within the given Rectangle.  Results are
        // streamed rather than returned at once (e.g. in a response message with a
        // repeated field), as the rectangle may cover a large area and contain a
        // huge number of features.
        rpc ListFeatures(Rectangle) returns (stream Feature) {}

        // A client-to-server streaming RPC.
        //
        // Accepts a stream of Points on a route being traversed, returning a
        // RouteSummary when traversal is completed.
        rpc RecordRoute(stream Point) returns (RouteSummary) {}

        // A Bidirectional streaming RPC.
        //
        // Accepts a stream of RouteNotes sent while a route is being traversed,
        // while receiving other RouteNotes (e.g. from other users).
        rpc RouteChat(stream RouteNote) returns (stream RouteNote) {}
      }


      // Points are represented as latitude-longitude pairs in the E7 representation

      // (degrees multiplied by 10**7 and rounded to the nearest integer).

      // Latitudes should be in the range +/- 90 degrees and longitude should be in

      // the range +/- 180 degrees (inclusive).

      message Point {
        int32 latitude = 1;
        int32 longitude = 2;
      }


      // A latitude-longitude rectangle, represented as two diagonally opposite

      // points "lo" and "hi".

      message Rectangle {
        // One corner of the rectangle.
        Point lo = 1;

        // The other corner of the rectangle.
        Point hi = 2;
      }


      // A feature names something at a given point.

      //

      // If a feature could not be named, the name is empty.

      message Feature {
        // The name of the feature.
        string name = 1;

        // The point where the feature is detected.
        Point location = 2;
      }


      // A RouteNote is a message sent while at a given point.

      message RouteNote {
        // The location from which the message is sent.
        Point location = 1;

        // The message to be sent.
        string message = 2;
      }


      // A RouteSummary is received in response to a RecordRoute rpc.

      //

      // It contains the number of individual points received, the number of

      // detected features, and the total distance covered as the cumulative sum of

      // the distance between each point.

      message RouteSummary {
        // The number of points received.
        int32 point_count = 1;

        // The number of known features passed while traversing the route.
        int32 feature_count = 2;

        // The distance covered in metres.
        int32 distance = 3;

        // The duration of the traversal in seconds.
        int32 elapsed_time = 4;
      }
    _type: proto_file
